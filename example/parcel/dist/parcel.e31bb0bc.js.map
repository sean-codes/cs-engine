{"version":3,"sources":["node_modules/cs-engine/src/parts/Loop.js","node_modules/cs-engine/src/parts/Draw.js","node_modules/cs-engine/src/main.node.js","index.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["CS","require","cs","canvas","objects","start","console","log","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","window","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"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","file":"parcel.e31bb0bc.js","sourceRoot":"..","sourcesContent":["class Loop {\n   constructor(cs) {\n      this.cs = cs\n      this.run = false\n      this.endSteps = []\n      this.beforeSteps = []\n      this.speed = 1000 / 60\n      this.last = Date.now()\n      this.id = 0\n      this.timeout = undefined\n   }\n\n   step() {\n      this.id += 1\n\n      // delta fixing\n      var now = Date.now()\n      this.delta = (now - this.last) / this.speed\n      this.last = now\n\n      if (!this.run && !once) return\n      this.timeout = setTimeout(this.step.bind(this), this.speed)\n\n      console.log('meow')\n      // this.cs.fps.update()\n      // this.cs.inputKeyboard.execute()\n      // this.cs.draw.debugReset()\n      //\n      // // network\n      // this.cs.network.read()\n      //\n      // // move camera before clear\n      // this.cs.camera.update()\n      // this.cs.surface.clearAll()\n      // this.cs.object.addNewObjects()\n      //\n      // // touch / mouse events\n      // this.cs.inputTouch.batchDownMove()\n      //\n      // // Execute before steps\n      // // disconnect to allow adding within a beforestep\n      // var temporaryBeforeSteps = []\n      // while(this.beforeSteps.length){ temporaryBeforeSteps.push(this.beforeSteps.pop()) }\n      // while (temporaryBeforeSteps.length) { temporaryBeforeSteps.pop()() }\n      //\n      // this.cs.userStep && cs.userStep()\n      //\n      // this.cs.object.loop(function(object) {\n      //    if (!object.core.active || !object.core.live) return\n      //    var stepEvent = cs.objects[object.core.type].step\n      //    cs.draw.setSurface(object.core.surface)\n      //    stepEvent && stepEvent.call(object  , object);\n      // })\n      //\n      // this.cs.userDraw && cs.userDraw()\n      // this.cs.object.loop(function(object) {\n      //    if (!object.core.active || !object.core.live) return\n      //    var objectType = this.cs.objects[object.core.type]\n      //    var drawEvent = objectType.draw\n      //    var drawOnceEvent = objectType.drawOnce\n      //\n      //    this.cs.draw.setSurface(object.core.surface)\n      //    if (drawOnceEvent) {\n      //       if (this.cs.surface.list[object.core.surface].clear || !object.core.drawn) {\n      //          object.core.drawn = true\n      //          drawOnceEvent.call(object, object)\n      //       }\n      //    }\n      //\n      //    drawEvent && drawEvent.call(object, object)\n      // })\n      //\n      // // timers\n      // this.cs.timer.loop()\n      //\n      // // Touch / Keyboard\n      // this.cs.inputKeyboard.reset()\n      // this.cs.inputTouch.reset()\n      // this.cs.inputTouch.batchUp()\n      //\n      // // Resize Canvas\n      // this.cs.surface.displayAll()\n      // if (this.cs.room.restarting === true)\n      //    this.cs.room.reset()\n      //\n      // // Execute next steps\n      // while (this.endSteps.length) {\n      //    this.endSteps.pop()()\n      // }\n      //\n      // // could clearup !live objects here\n      // this.cs.object.clean()\n      //\n      // // network metrics\n      // if (this.cs.network.status) {\n      //    this.cs.network.updateMetrics()\n      // }\n   }\n\n   beforeStep(func) {\n      this.beforeSteps.push(func)\n   }\n\n   endStep(func) {\n      this.endSteps.push(func)\n   }\n\n   start() {\n      this.run = true\n      this.step()\n   }\n\n   stop() {\n      this.run = false\n      clearTimeout(this.timeout)\n   }\n}\n\n// export node\nif (module) module.exports = Loop\n","class Draw {\n   constructor(cs) {\n      this.cs = cs\n      this.debug = {}\n      this.surface = {}\n      this.config = {\n         defaults: {\n            alpha: 1,\n            width: 1,\n            font: { size: 12, family: 'Arial' },\n            textAlign: 'start',\n            textBaseline: 'top',\n            color: '#000',\n            lineHeight: 10,\n            lineDash: [],\n            operation: 'source-over'\n         },\n         current: {} // will clone on settingsDefault()\n      }\n   }\n\n   setSurface(surface) {\n      this.surface = surface\n      this.scale = 1\n      this.cameraX = 0\n      this.cameraY = 0\n      this.cameraWidth = this.surface.width\n      this.cameraHeight = this.surface.height\n      this.zScaleHack = 0\n\n      if (this.surface.useCamera && this.surface.oneToOne) {\n         var camera = this.cs.camera.info()\n\n         this.scale = camera.zScale\n         this.cameraX = camera.x\n         this.cameraY = camera.y\n         this.cameraWidth = camera.width\n         this.cameraHeight = camera.height\n\n         // helps sync up scaled surfaces with unscaled\n         if (this.surface.oneToOne && camera.scale > 1) {\n            this.zScaleHack = 1\n         }\n      }\n\n      this.settingsDefault()\n   }\n\n   debugReset() {\n      this.debug = {\n         spritesSkipped: this.debug.spritesSkippedCount,\n         spritesDrawn: this.debug.spritesDrawnCount,\n         rectanglesSkipped: this.debug.rectanglesSkippedCount,\n         rectanglesDrawn: this.debug.rectanglesDrawnCount,\n         shapesSkipped: this.debug.shapesSkippedCount,\n         shapesDrawn: this.debug.shapesDrawnCount,\n         circlesSkipped: this.debug.circlesSkippedCount,\n         circlesDrawn: this.debug.circlesDrawnCount,\n         spritesSkippedCount: 0,\n         spritesDrawnCount: 0,\n         rectanglesSkippedCount: 0,\n         rectanglesDrawnCount: 0,\n         shapesSkippedCount: 0,\n         shapesDrawnCount: 0,\n         circlesSkippedCount: 0,\n         circlesDrawnCount: 0,\n      }\n   }\n\n   outside(o) {\n      return (\n         o.x + o.width < this.cameraX ||\n         o.x > this.cameraX + this.cameraWidth ||\n         o.y + o.height < this.cameraY ||\n         o.y > this.cameraY + this.cameraHeight\n      )\n   }\n\n   sprite(options) {\n      var scale = this.scale\n      var info = this.this.cs.sprite.info(options)\n      var frame = info.frame\n      var xOff = info.xoff\n      var yOff = info.yoff\n\n      // dest\n      var dx = options.x - this.cameraX\n      var dy = options.y - this.cameraY\n      var dWidth = info.width\n      var dHeight = info.height\n\n      // source\n      var sx = 0\n      var sy = 0\n      var sWidth = info.fWidth\n      var sHeight = info.fHeight\n\n      // trimming\n      if (options.hTrim) {\n         sHeight -= options.hTrim\n         dHeight -= options.hTrim\n      }\n\n      // when flipping match the pixel\n      if (info.scaleX < 0 && xOff) dx++\n      if (info.scaleY < 0 && yOff) dy++\n\n      var rotateOrSomething = (info.scaleX < 0 || info.scaleY < 0 || info.angle)\n      if (rotateOrSomething) {\n         this.surface.ctx.save()\n         this.surface.ctx.translate((dx * scale), (dy * scale))\n         this.surface.ctx.rotate(options.angle * Math.PI / 180)\n         this.surface.ctx.scale(info.scaleX, info.scaleY)\n\n         this.surface.ctx.drawImage(\n            frame,\n            sx, sy, sWidth, sHeight,\n            (-xOff * scale),\n            (-yOff * scale + this.zScaleHack),\n            (dWidth * scale),\n            (dHeight * scale)\n         )\n\n         this.surface.ctx.restore()\n      } else {\n         this.surface.ctx.drawImage(\n            frame,\n            sx, sy, sWidth, sHeight,\n            ((dx - xOff) * scale),\n            ((dy - yOff) * scale) + this.zScaleHack,\n            (dWidth * scale),\n            (dHeight * scale)\n         )\n      }\n\n      this.debug.spritesDrawnCount += 1\n      this.cs.draw.settingsDefault()\n      return\n   }\n\n   textInfo(options) {\n      // Guessing the size\n      var lines = []\n      var curLine = []\n      var y = 0\n      var x = 0\n      var textArr = (options.text.toString()).split('')\n\n      // Setup the lines\n      for (var pos in textArr) {\n         curLine.push(textArr[pos])\n\n         if (this.surface.ctx.measureText(curLine.join('')).width > options.width) {\n            // Try to find a space\n            for (var o = curLine.length; o > 0; o--)\n               if (curLine[o] == ' ') break\n\n            // If no space add a dash\n            if (!o) {\n               o = curLine.length - 2\n               curLine.splice(o - 1, 0, '-')\n            }\n\n            // Draw and reset\n            lines.push(curLine.slice(0, o).join('').trim())\n            curLine = curLine.slice(o, curLine.length)\n            y += options.lineHeight\n         }\n         if (pos == textArr.length - 1) {\n            lines.push(curLine.join('').trim())\n         }\n      }\n\n      return {\n         lines: lines,\n         lineHeight: options.lineHeight,\n         width: options.width,\n         height: lines.length * options.lineHeight,\n      }\n   }\n\n   text(options) {\n      var x = options.x - this.cameraX\n      var y = options.y - this.cameraY\n      var scale = this.scale\n\n      options.center && this.cs.draw.setTextCenter()\n\n      if (options.lines) {\n         for (var line in options.lines) {\n            var lineYOffset = (line * (options.lineHeight || this.surface.ctx.lineHeight))\n            this.surface.ctx.fillText(\n               options.lines[line],\n               x * scale,\n               (y + lineYOffset) * scale\n            )\n         }\n      } else {\n         this.surface.ctx.fillText(\n            options.text,\n            Math.floor(x * scale),\n            Math.floor(y * scale)\n         )\n      }\n      this.settingsDefault()\n   }\n\n   textWidth(str) {\n      return this.surface.ctx.measureText(str).width\n   }\n\n   line(options) {\n      var lineWidth = this.surface.ctx.lineWidth\n      var lineWidthAdjust = lineWidth / 2 / this.scale\n      var scale = this.scale\n\n      var x1 = options.points[0].x + lineWidthAdjust - this.cameraX\n      var x2 = options.points[1].x + lineWidthAdjust - this.cameraX\n      var y1 = options.points[0].y - lineWidthAdjust - this.cameraY\n      var y2 = options.points[1].y - lineWidthAdjust - this.cameraY\n\n      this.surface.ctx.beginPath();\n      this.surface.ctx.moveTo(x1 * scale, y1 * scale);\n      this.surface.ctx.lineTo(x2 * scale, y2 * scale);\n      this.surface.ctx.stroke()\n      this.settingsDefault()\n   }\n\n   fillRect(args) {\n      var scale = this.scale\n      var x = args.x\n      var y = args.y\n      var width = this.cs.default(args.width, args.size)\n      var height = this.cs.default(args.height, args.size)\n\n      if (args.center) {\n         x -= width / 2\n         y -= height / 2\n      }\n\n      if (this.outside({ x: x, y: y, width: width, height: height })) {\n         this.debug.rectanglesSkippedCount += 1\n         this.settingsDefault()\n         return\n      } else {\n         this.debug.rectanglesDrawnCount += 1\n      }\n\n      this.surface.ctx.fillRect(\n         (x - this.cameraX) * scale,\n         (y - this.cameraY) * scale,\n         width * scale,\n         height * scale,\n      )\n      this.settingsDefault()\n   }\n\n   strokeRect(args) {\n      var scale = this.scale\n      var lineWidth = this.surface.ctx.lineWidth\n      var lineWidthAdjust = lineWidth / 2 / scale\n\n      var x = args.x + lineWidthAdjust\n      var y = args.y + lineWidthAdjust\n      var width = this.cs.default(args.width, args.size) - lineWidthAdjust * 2\n      var height = this.cs.default(args.height, args.size) - lineWidthAdjust * 2\n\n      if (args.center) {\n         x -= width / 2\n         y -= height / 2\n      }\n\n      if (this.outside({ x: x, y: y, width: width, height: height })) {\n         this.debug.rectanglesSkippedCount += 1\n         this.settingsDefault()\n         return\n      } else {\n         this.debug.rectanglesDrawnCount += 1\n      }\n\n      this.surface.ctx.strokeRect(\n         (x - this.cameraX) * scale,\n         (y - this.cameraY) * scale,\n         width * scale,\n         height * scale,\n      )\n\n      this.settingsDefault()\n   }\n\n   circle(options) {\n      var scale = this.scale\n      var x = options.pos ? options.pos.x : options.x\n      var y = options.pos ? options.pos.y : options.y\n      var radius = options.radius\n\n      if (this.outside({\n         x: x - radius,\n         y: y - radius,\n         width: radius * 2,\n         height: radius * 2,\n      })) {\n         this.debug.circlesSkippedCount += 1\n         this.settingsDefault()\n         return\n      } else {\n         this.debug.circleDrawnCount += 1\n      }\n\n      var fill = this.cs.default(options.fill, false)\n      this.surface.ctx.beginPath()\n      this.surface.ctx.arc(\n         (x - this.cameraX) * scale,\n         (y - this.cameraY) * scale,\n         radius * scale,\n         0, Math.PI * 2, true\n      )\n      this.surface.ctx.closePath()\n      fill ? this.surface.ctx.fill() : this.surface.ctx.stroke()\n      this.settingsDefault()\n   }\n\n   circleGradient(options) {\n      var scale = this.scale\n      var x = options.x - this.cameraX\n      var y = options.y - this.cameraY\n      var radius = options.radius\n      var colorStart = options.colorStart\n      var colorEnd = options.colorEnd\n\n      var g = this.surface.ctx.createRadialGradient(\n         x * scale,\n         y * scale,\n         0,\n         x * scale,\n         y * scale,\n         radius * scale\n      )\n      g.addColorStop(1, colorEnd)\n      g.addColorStop(0, colorStart)\n      this.surface.ctx.fillStyle = g\n      this.surface.ctx.beginPath()\n      this.surface.ctx.arc(\n         x * scale,\n         y * scale,\n         radius * scale,\n         0, Math.PI * 2, true\n      )\n      this.surface.ctx.closePath()\n      this.surface.ctx.fill()\n      this.settingsDefault()\n   }\n\n   shape(options) {\n      var scale = this.scale\n      var vertices = options.vertices\n      var relative = this.cs.default(options.relative, { x: 0, y: 0 })\n\n      var bounds = { xmin: 0, ymin: 0, xmax: 0, ymax: 0 }\n      for (var i = 0; i < vertices.length; i++) {\n         bounds.xmin = Math.min(relative.x + vertices[i].x, bounds.xmin)\n         bounds.ymin = Math.min(relative.y + vertices[i].y, bounds.ymin)\n         bounds.xmax = Math.max(relative.x + vertices[i].x, bounds.xmax)\n         bounds.ymax = Math.max(relative.y + vertices[i].y, bounds.ymax)\n      }\n\n      if (this.outside({\n         x: bounds.xmin,\n         y: bounds.ymin,\n         width: bounds.xmax - bounds.xmin,\n         height: bounds.ymax - bounds.ymin\n      })) {\n         this.debug.shapesSkippedCount += 1\n         this.settingsDefault()\n         return\n      } else {\n         this.debug.shapesDrawnCount += 1\n      }\n\n\n      this.surface.ctx.beginPath()\n      this.surface.ctx.moveTo(\n         (relative.x + vertices[0].x - this.cameraX) * scale,\n         (relative.y + vertices[0].y - this.cameraY) * scale\n      )\n\n      for (var i = 1; i < vertices.length; i++) {\n         this.surface.ctx.lineTo(\n            (relative.x + vertices[i].x - this.cameraX) * scale,\n            (relative.y + vertices[i].y - this.cameraY) * scale\n         )\n      }\n\n      this.surface.ctx.closePath(\n         (relative.x + vertices[0].x - this.cameraX) * scale,\n         (relative.y + vertices[0].y - this.cameraY) * scale\n      )\n\n      !options.fill && this.surface.ctx.stroke()\n      options.fill && this.surface.ctx.fill()\n      this.settingsDefault()\n   }\n\n   setColor(color) {\n      if(this.surface.ctx.fillStyle === color && this.surface.ctx.strokeStyle === color) return\n      this.surface.ctx.fillStyle = color;\n      this.surface.ctx.strokeStyle = color;\n   }\n\n   setAlpha(alpha) {\n      if(this.surface.ctx.globalAlpha === alpha) return\n      this.surface.ctx.globalAlpha = alpha;\n   }\n\n   setWidth(width) {\n      if(this.surface.ctx.lineWidth === width * this.scale) return\n      this.surface.ctx.lineWidth = width * this.scale;\n   }\n\n   setFont(options) {\n      if(this.surface.ctx.fontSize === options.size * this.scale && this.surface.ctx.fontFamily === options.family) return\n      this.surface.ctx.fontSize = options.size * this.scale\n      this.surface.ctx.fontFamily = options.family\n      this.surface.ctx.font = (options.effect ? options.effect + ' ' : '') + options.size * this.scale + 'px ' + options.family;\n   }\n\n   setLineHeight(height) {\n      if(this.surface.ctx.lineHeight === height) return\n      this.surface.ctx.lineHeight = height\n   }\n\n   setLineDash(lineDash) {\n      this.surface.ctx.setLineDash(lineDash)\n   }\n\n   setTextAlign(alignment) {\n      if(this.surface.ctx.textAlign === alignment) return\n      this.surface.ctx.textAlign = alignment;\n   }\n\n   setTextBaseline(alignment) {\n      if(this.surface.ctx.textBaseline === alignment) return\n      this.surface.ctx.textBaseline = alignment;\n   }\n\n   setTextCenter() {\n      this.setTextAlign('center');\n      this.setTextBaseline('middle');\n   }\n\n   setOperation(operation) {\n      if(this.surface.ctx.globalCompositeOperation === operation) return\n      this.surface.ctx.globalCompositeOperation = operation;\n   }\n\n   settings(settings) {\n      for (var setting in settings) {\n         this.config.current[setting] = settings[setting]\n      }\n      this.settingsUpdate()\n   }\n\n   default(settings) {\n      for (var setting in settings) {\n         this.config.defaults[setting] = settings[setting]\n      }\n      this.settingsDefault()\n   }\n\n   settingsUpdate() {\n      this.cs.draw.setAlpha(this.config.current.alpha)\n      this.cs.draw.setWidth(this.config.current.width)\n      this.cs.draw.setFont(this.config.current.font)\n      this.cs.draw.setTextAlign(this.config.current.textAlign)\n      this.cs.draw.setLineHeight(this.config.current.lineHeight)\n      this.cs.draw.setTextBaseline(this.config.current.textBaseline)\n      this.cs.draw.setColor(this.config.current.color)\n      this.cs.draw.setOperation(this.config.current.operation)\n      this.cs.draw.setLineDash(this.config.current.lineDash)\n   }\n\n   settingsDefault() {\n      for (var setting in this.config.defaults) {\n         this.config.current[setting] = this.config.defaults[setting]\n      }\n\n      this.settingsUpdate()\n   }\n}\n\nif (module) module.exports = Draw\n","const Loop = require('./parts/Loop')\nconst Draw = require('./parts/Draw')\n\nmodule.exports = class cs {\n   constructor() {\n      this.loop = new Loop(this)\n      this.draw = new Draw(this)\n\n      this.loop.start()\n   }\n}\n","// exmaple of a server side engine!\nconst CS = require('cs-engine')\n\nconst cs = new CS({\n   canvas: canvas,\n   \n   objects: [\n\n   ],\n\n   start: () => {\n      console.log('meow')\n   }\n})\n\nconsole.log(cs);\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}